generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model UserApplies {
  id         Int      @id @default(autoincrement())
  user_id    Int?
  job_id     Int
  created_at DateTime @default(now()) @db.DateTime(0)

  @@map("user_applies")
}

model job {
  id                   Int             @id @default(autoincrement())
  title                String?         @db.Text
  reward               String?         @db.VarChar(50)
  overview             String?         @db.Text
  is_it_job            String?         @db.Text
  benefits             String?         @db.Text
  job_location         String?         @db.VarChar(255)
  job_team_size        String?         @db.Text
  job_address          String?         @db.Text
  employment_type      String?         @db.Text
  level                String?         @db.Text
  total_vacancies      String?         @db.Text
  gross_month_salary   String?         @db.Text
  interview_process    String?         @db.Text
  report_to            String?         @db.Text
  preferred_skill      String?         @db.Text
  job_responsibility   String?         @db.Text
  why_should_apply     String?         @db.Text
  job_required_skill   String?         @db.Text
  working_address      String?         @db.Text
  company_name         String?         @db.Text
  company_address      String?         @db.Text
  company_logo_url     String?         @db.Text
  company_description  String?         @db.Text
  company_website      String?         @db.Text
  company_working_hour String?         @db.Text
  company_team_size    String?         @db.Text
  memo                 String?         @db.Text
  source_site          String?         @db.VarChar(50)
  source_id            String?         @db.VarChar(50)
  is_closed            String?         @db.Text
  tags                 String?         @db.Text
  updated_at           DateTime?       @db.DateTime(0)
  notifications        notifications[]

  @@unique([source_id, source_site], map: "unique_source")
}

model user {
  id         Int      @id @default(autoincrement())
  email      String   @db.VarChar(255)
  name       String?  @db.VarChar(100)
  created_at DateTime @default(now()) @db.DateTime(0)
}

model notifications {
  id         Int      @id @default(autoincrement())
  type       String?  @db.VarChar(255)
  content    String   @db.VarChar(255)
  job_id     Int?
  job        job?     @relation(fields: [job_id], references: [id])
  is_read    Boolean?
  user_id    Int
  created_at DateTime @db.DateTime(0)
}
